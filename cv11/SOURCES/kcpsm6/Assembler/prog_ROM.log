KCPSM6 Assembler log file for program 'D:\Documents\xsvobo1q\PLD\cv11\SOURCES\kcpsm6\Assembler\prog_ROM.psm'.
Generated by KCPSM6 version v2.70
Ken Chapman - Xilinx Ltd - 16th May 2014

Assembly datestamp: 25 Apr 2022
Assembly timestamp: 10:01:12

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: FFF hex
Nominal program memory size: 4K (4096)   address(11:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 72
Memory locations available: 4024


Assembly listing

 Addr Code                Instruction

 000                      ;==============================================================================;
 000                      ;
 000                      ; Michal Kubicek (michal.kubicek@email.cz)
 000                      ;
 000                      ;==============================================================================;
 000                      ;   __  __       _
 000                      ;  |  \/  |     (_)
 000                      ;  | \  / | __ _ _ _ __
 000                      ;  | |\/| |/ _' | | '_ \
 000                      ;  | |  | | (_| | | | | |
 000                      ;  |_|  |_|\__,_|_|_| |_|
 000                      ;
 000                      ;
 000                      ;
 000                      ;==============================================================================;
 000                      ; Startup and workaround for "Vivado Hardware Manager" problem
 000                      ;==============================================================================;
 000                      ;
 000  22004               JUMP 004[cold_start]         ; Avoid address 003 on start up
 001  22004               JUMP 004[cold_start]
 002  22004               JUMP 004[cold_start]
 003  22004               JUMP 004[cold_start]         ; Address 003
 004                      ;
 004          cold_start: ; simple 7-segment display text
 004  0100A               LOAD s0, 0A
 005  2D003               OUTPUT s0, 03[ID_7SEG_DIG_1]
 006  0100A               LOAD s0, 0A
 007  2D004               OUTPUT s0, 04[ID_7SEG_DIG_2]
 008  0100A               LOAD s0, 0A
 009  2D005               OUTPUT s0, 05[ID_7SEG_DIG_3]
 00A  0100A               LOAD s0, 0A
 00B  2D006               OUTPUT s0, 06[ID_7SEG_DIG_4]
 00C                      ;
 00C                      ;
 00C  010FF               LOAD s0, FF
 00D  2D009               OUTPUT s0, 09[ID_PWM_REF_0]
 00E  0100F               LOAD s0, 0F
 00F  2D00A               OUTPUT s0, 0A[ID_PWM_REF_1]
 010  010AF               LOAD s0, AF
 011  2D00B               OUTPUT s0, 0B[ID_PWM_REF_2]
 012  010FF               LOAD s0, FF
 013  2D00C               OUTPUT s0, 0C[ID_PWM_REF_3]
 014  010AF               LOAD s0, AF
 015  2D00D               OUTPUT s0, 0D[ID_PWM_REF_4]
 016  0100F               LOAD s0, 0F
 017  2D00E               OUTPUT s0, 0E[ID_PWM_REF_5]
 018  010AF               LOAD s0, AF
 019  2D00F               OUTPUT s0, 0F[ID_PWM_REF_6]
 01A  010FF               LOAD s0, FF
 01B  2D010               OUTPUT s0, 10[ID_PWM_REF_7]
 01C                      ;
 01C                      ;
 01C                      ;
 01C                      ;==============================================================================;
 01C                      ; Main program loop
 01C                      ;==============================================================================;
 01C                      ;
 01C  2002A    main_loop: CALL 02A[wait_100ms]
 01D                      ;
 01D                      ; read status of buttons and switches and forward it to LEDs
 01D  09000               INPUT s0, 00[ID_BTN]         ; read state of buttons
 01E  14006               SL0 s0                       ; 4x shift left
 01F  14006               SL0 s0
 020  14006               SL0 s0
 021  14006               SL0 s0
 022  09101               INPUT s1, 01[ID_SW]          ; read state of switches
 023  04100               OR s1, s0                    ; merge 4 BTN and 4 SW to one byte (s1)
 024  2D102               OUTPUT s1, 02[ID_LED]        ; lit LED on/off according to SW and BTN
 025                      ;
 025                      ;
 025  2201C               JUMP 01C[main_loop]
 026                      ;
 026                      ;==============================================================================;
 026                      ; Include other source files
 026                      ;==============================================================================;
 026                      ;
 026                      INCLUDE "D:\Documents\xsvobo1q\PLD\cv11\SOURCES\kcpsm6\Assembler\prog_ROM_addr.psm"["prog_ROM_addr.psm"]
 026                      ;==============================================================================;
 026                      ;
 026                      ; Michal Kubicek (michal.kubicek@email.cz)
 026                      ;
 026                      ;==============================================================================;
 026                      ;               _     _
 026                      ;      /\      | |   | |
 026                      ;     /  \   __| | __| |_ __ ___  ___ ___   ___ _ __   __ _  ___ ___
 026                      ;    / /\ \ / _' |/ _' | '__/ _ \/ __/ __| / __| '_ \ / _' |/ __/ _ \
 026                      ;   / ____ \ (_| | (_| | | |  __/\__ \__ \ \__ \ |_) | (_| | (_|  __/
 026                      ;  /_/    \_\__,_|\__,_|_|  \___||___/___/ |___/ .__/ \__,_|\___\___|
 026                      ;                                              | |
 026                      ;                                              |_|
 026                      ;
 026                      ;==============================================================================;
 026                      ;
 026                      CONSTANT ID_BTN, 00
 026                      CONSTANT ID_SW, 01
 026                      CONSTANT ID_LED, 02
 026                      CONSTANT ID_7SEG_DIG_1, 03
 026                      CONSTANT ID_7SEG_DIG_2, 04
 026                      CONSTANT ID_7SEG_DIG_3, 05
 026                      CONSTANT ID_7SEG_DIG_4, 06
 026                      CONSTANT ID_7SEG_DP, 07
 026                      CONSTANT ID_7SEG_DOTS, 08
 026                      CONSTANT ID_PWM_REF_0, 09
 026                      CONSTANT ID_PWM_REF_1, 0A
 026                      CONSTANT ID_PWM_REF_2, 0B
 026                      CONSTANT ID_PWM_REF_3, 0C
 026                      CONSTANT ID_PWM_REF_4, 0D
 026                      CONSTANT ID_PWM_REF_5, 0E
 026                      CONSTANT ID_PWM_REF_6, 0F
 026                      CONSTANT ID_PWM_REF_7, 10
 026                      ;
 026                      ;
 026                      ;==============================================================================;
 026                      INCLUDE "D:\Documents\xsvobo1q\PLD\cv11\SOURCES\kcpsm6\Assembler\prog_ROM_delay.psm"["prog_ROM_delay.psm"]
 026                      ;==============================================================================;
 026                      ;
 026                      ; Michal Kubicek (michal.kubicek@email.cz)
 026                      ;
 026                      ;==============================================================================;
 026                      ;  __          __   _ _                                  _
 026                      ;  \ \        / /  (_) |                                | |
 026                      ;   \ \  /\  / /_ _ _| |_   _ __  _ __ ___   ___ ___  __| |_   _ _ __ ___  ___
 026                      ;    \ \/  \/ / _' | | __| | '_ \| '__/ _ \ / __/ _ \/ _' | | | | '__/ _ \/ __|
 026                      ;     \  /\  / (_| | | |_  | |_) | | | (_) | (_|  __/ (_| | |_| | | |  __/\__ \
 026                      ;      \/  \/ \__,_|_|\__| | .__/|_|  \___/ \___\___|\__,_|\__,_|_|  \___||___/
 026                      ;                          | |
 026                      ;                          |_|
 026                      ;
 026                      ;==============================================================================;
 026                      ; Blocking wait procedures (times valid for 50 MHz clock)
 026                      ;==============================================================================;
 026                      ;
 026  0100D      wait_1s: LOAD s0, 0D
 027  0115E               LOAD s1, 5E
 028  01260               LOAD s2, 60
 029  2203E               JUMP 03E[wait_common]
 02A                      ;
 02A  01065   wait_100ms: LOAD s0, 65
 02B  01189               LOAD s1, 89
 02C  0120A               LOAD s2, 0A
 02D  2203E               JUMP 03E[wait_common]
 02E                      ;
 02E  01021    wait_10ms: LOAD s0, 21
 02F  011F4               LOAD s1, F4
 030  01201               LOAD s2, 01
 031  2203E               JUMP 03E[wait_common]
 032                      ;
 032  01067     wait_1ms: LOAD s0, 67
 033  01118               LOAD s1, 18
 034  01201               LOAD s2, 01
 035  2203E               JUMP 03E[wait_common]
 036                      ;
 036  0106E   wait_100us: LOAD s0, 6E
 037  01102               LOAD s1, 02
 038  01201               LOAD s2, 01
 039  2203E               JUMP 03E[wait_common]
 03A                      ;
 03A  0103C    wait_10us: LOAD s0, 3C
 03B  01100               LOAD s1, 00
 03C  01201               LOAD s2, 01
 03D  2203E               JUMP 03E[wait_common]
 03E                      ;
 03E  19001  wait_common: SUB s0, 01
 03F  1B100               SUBCY s1, 00
 040  1B200               SUBCY s2, 00
 041  3603E               JUMP NZ, 03E[wait_common]
 042  25000               RETURN 
 043                      ;
 043                      ;==============================================================================;
 043                      INCLUDE "D:\Documents\xsvobo1q\PLD\cv11\SOURCES\kcpsm6\Assembler\prog_ROM_IRQ.psm"["prog_ROM_IRQ.psm"]
 043                      ;==============================================================================;
 043                      ;
 043                      ; Michal Kubicek (michal.kubicek@email.cz)
 043                      ;
 043                      ;==============================================================================;
 043                      ;  _____       _                             _
 043                      ; |_   _|     | |                           | |
 043                      ;   | |  _ __ | |_ ___ _ __ _ __ _   _ _ __ | |_
 043                      ;   | | | '_ \| __/ _ \ '__| '__| | | | '_ \| __|
 043                      ;  _| |_| | | | ||  __/ |  | |  | |_| | |_) | |_
 043                      ; |_____|_| |_|\__\___|_|  |_|   \__,_| .__/ \__|
 043                      ;                                     | |
 043                      ;                                     |_|
 043                      ;
 043                      ;==============================================================================;
 043                      ;
 043                      ; register backup
 043  37001   IntService: REGBANK B
 044                      ;
 044                      ;==============================================================================;
 044                      ;
 044  0D000               TEST s0, 00                  ; dummy
 045                      ;
 045                      ;
 045                      ;
 045                      ;==============================================================================;
 045                      ;
 045                      ; register backup
 045  37000      Int_End: REGBANK A
 046  29001               RETURNI ENABLE               ; Return from interrupt subroutine, enable interrupt
 047                      ;
 047                      ;==============================================================================;
 047                      ;
 047                      ;
 047                      ;==============================================================================;
 047                      ; Interrupt jump instruction
 047                      ;==============================================================================;
 047                      ;
 FFF                      ADDRESS FFF                  ; interrupt
 FFF  22043               JUMP 043[IntService]         ; jump to interrupt subroutine address
 FFF                      ;
 FFF                      ;==============================================================================;


All unused memory locations contain zero (equivalent to 'LOAD s0, s0')



List of PSM files that have been assembled

D:\Documents\xsvobo1q\PLD\cv11\SOURCES\kcpsm6\Assembler\prog_ROM.psm
D:\Documents\xsvobo1q\PLD\cv11\SOURCES\kcpsm6\Assembler\prog_ROM_addr.psm
D:\Documents\xsvobo1q\PLD\cv11\SOURCES\kcpsm6\Assembler\prog_ROM_delay.psm
D:\Documents\xsvobo1q\PLD\cv11\SOURCES\kcpsm6\Assembler\prog_ROM_IRQ.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   10'd         
 timestamp_minutes 01'd         
 timestamp_seconds 12'd         
 datestamp_year    22'd         
 datestamp_month   4'd          
 datestamp_day     25'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 ID_BTN            00           prog_ROM_addr.psm
 ID_SW             01           prog_ROM_addr.psm
 ID_LED            02           prog_ROM_addr.psm
 ID_7SEG_DIG_1     03           prog_ROM_addr.psm
 ID_7SEG_DIG_2     04           prog_ROM_addr.psm
 ID_7SEG_DIG_3     05           prog_ROM_addr.psm
 ID_7SEG_DIG_4     06           prog_ROM_addr.psm
 ID_7SEG_DP        07           prog_ROM_addr.psm
 ID_7SEG_DOTS      08           prog_ROM_addr.psm
 ID_PWM_REF_0      09           prog_ROM_addr.psm
 ID_PWM_REF_1      0A           prog_ROM_addr.psm
 ID_PWM_REF_2      0B           prog_ROM_addr.psm
 ID_PWM_REF_3      0C           prog_ROM_addr.psm
 ID_PWM_REF_4      0D           prog_ROM_addr.psm
 ID_PWM_REF_5      0E           prog_ROM_addr.psm
 ID_PWM_REF_6      0F           prog_ROM_addr.psm
 ID_PWM_REF_7      10           prog_ROM_addr.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.70"        
 datestamp$        "25 Apr 2022"  
 timestamp$        "10:01:12"     



List of line labels

   Label         Addr  Source PSM File

   cold_start    004   prog_ROM.psm
   main_loop     01C   prog_ROM.psm
 * wait_1s       026   prog_ROM_delay.psm
   wait_100ms    02A   prog_ROM_delay.psm
 * wait_10ms     02E   prog_ROM_delay.psm
 * wait_1ms      032   prog_ROM_delay.psm
 * wait_100us    036   prog_ROM_delay.psm
 * wait_10us     03A   prog_ROM_delay.psm
   wait_common   03E   prog_ROM_delay.psm
   IntService    043   prog_ROM_IRQ.psm
 * Int_End       045   prog_ROM_IRQ.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD             30
 STAR              -

 AND               -
 OR                1
 XOR               -

 ADD               -
 ADDCY             -
 SUB               1
 SUBCY             2

 TEST              1
 TESTCY            -
 COMPARE           -
 COMPARECY         -

 SL0               4
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           2

 INPUT             2
 OUTPUT           13
 OUTPUTK           -

 STORE             -
 FETCH             -

 DISABLE           -
 ENABLE            -
 RETURNI           1

 JUMP             13
 JUMP@             -
 CALL              1
 CALL@             -
 RETURN            1
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
